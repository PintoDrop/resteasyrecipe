[{"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\index.js":"1","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\App.js":"2","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Random\\index.js":"3","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js":"4","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js":"5","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Create\\index.js":"6","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js":"7","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\index.js":"8","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\index.js":"9","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\index.js":"10","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js":"11","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js":"12","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js":"13","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js":"14","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js":"15","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js":"16","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js":"17","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js":"18","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\auth.js":"19","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\mutations.js":"20"},{"size":345,"mtime":1683048456694,"results":"21","hashOfConfig":"22"},{"size":2015,"mtime":1683069564284,"results":"23","hashOfConfig":"22"},{"size":35,"mtime":1683064176196,"results":"24","hashOfConfig":"22"},{"size":38,"mtime":1683064176197,"results":"25","hashOfConfig":"22"},{"size":42,"mtime":1683048456694,"results":"26","hashOfConfig":"22"},{"size":45,"mtime":1683064176195,"results":"27","hashOfConfig":"22"},{"size":42,"mtime":1683063291167,"results":"28","hashOfConfig":"22"},{"size":38,"mtime":1683048456695,"results":"29","hashOfConfig":"22"},{"size":41,"mtime":1683048456696,"results":"30","hashOfConfig":"22"},{"size":43,"mtime":1683048456694,"results":"31","hashOfConfig":"22"},{"size":6021,"mtime":1683048456694,"results":"32","hashOfConfig":"22"},{"size":5703,"mtime":1683064176197,"results":"33","hashOfConfig":"22"},{"size":1432,"mtime":1683064176194,"results":"34","hashOfConfig":"22"},{"size":7626,"mtime":1683064176195,"results":"35","hashOfConfig":"22"},{"size":2207,"mtime":1683048456695,"results":"36","hashOfConfig":"22"},{"size":2378,"mtime":1683048456695,"results":"37","hashOfConfig":"22"},{"size":184,"mtime":1683064176196,"results":"38","hashOfConfig":"22"},{"size":1430,"mtime":1683073758414,"results":"39","hashOfConfig":"22"},{"size":496,"mtime":1683048456696,"results":"40","hashOfConfig":"22"},{"size":702,"mtime":1683064176198,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"k3p0g9",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\index.js",[],["88","89"],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\App.js",["90","91","92","93"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\nimport Register from \"./pages/Register\";\nimport CreateRecipe from \"./pages/Create\";\n\n// import Register from \"./pages/Register\";\nimport Recipes from \"./pages/Recipes\";\nimport Favorites from \"./pages/Favorites\";\nimport Random from \"./pages/Random\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport SearchBar from \"./pages/SearchBanner\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"auth_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [pageState, setPageState] = useState({\n    recipes: true,\n    random: false,\n    login: false,\n    favorites: false,\n  });\n\n  return (\n    <>\n      <ApolloProvider client={client}>\n        {/* <Router>\n          <div>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n            </Routes>\n          </div>\n        </Router> */}\n        <Home pageState={pageState} setPageState={setPageState} />\n        <SearchBar />\n        {pageState.recipes ? <Recipes /> : \"\"}\n        {pageState.random ? <Random /> : \"\"}\n        {pageState.login ? <Login /> : \"\"}\n        {pageState.favorites ? <Favorites /> : \"\"}\n        {pageState.create ? <CreateRecipe /> : \"\"}\n        \n\n    </ApolloProvider>\n    \n    <CssBaseline />\n    <CreateRecipe />\n\n\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Random\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Create\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js",["94","95","96"],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\n\nimport HomePhoto from \"../../Images/food1.jpeg\";\n\n// import Login from \"../Login/Login\"\n\nimport Favorites from \"../Favorites/Favorites\";\n\n\nconst pages = [\"Recipes\", \"Random\", \"Login/Register\"];\nconst settings = [\"Profile\", \"Create Recipe\", \"Favorites\", \"Logout\"];\n\nfunction Home({ pageState, setPageState }) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const handleOpenRecipes = () => {\n    setPageState({ ...pageState, recipes: true, random: false, login: false });\n  };\n\n  const handleOpenRandom = () => {\n    setPageState({ ...pageState, recipes: false, random: true, login: false });\n  };\n  const handleOpenLogin = () => {\n    setPageState({ ...pageState, recipes: false, random: false, login: true });\n  };\n  // const handleOpenFavorites = () => {\n  //   setPageState({...pageState, recipes: false, random: false, login: false, favorites: true})\n  // };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <MenuBookIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n\n            {/* <Button href=\"/recipes\" variant=\"contained\">\n              Recipes\n            </Button> */}\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {/* {pages.map((page) => ( */}\n\n                {/* <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem> */}\n                <MenuItem onClick={handleOpenRecipes}>\n                  <Typography textAlign=\"center\">Recipes</Typography>\n                </MenuItem>\n                <MenuItem onClick={handleOpenRandom}>\n                  <Typography textAlign=\"center\">Random</Typography>\n                </MenuItem>\n                <MenuItem onClick={handleOpenLogin}>\n                  <Typography textAlign=\"center\">Login/Register</Typography>\n                </MenuItem>\n\n                {/* ))} */}\n              </Menu>\n            </Box>\n            <MenuBookIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {/* {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  {page}\n                </Button> */}\n              <Button\n                // key={page}\n                onClick={handleOpenRecipes}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Recipes\n              </Button>\n              <Button\n                // key={page}\n                onClick={handleOpenRandom}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Random\n              </Button>\n              <Button\n                // key={page}\n                onClick={handleOpenLogin}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Login/Register\n              </Button>\n              {/* ))} */}\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Options\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                  {/* need ${user} and avatar images, avater letter changes with name */}\n                  <Avatar alt=\"Remy\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: \"45px\" }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              >\n                {settings.map((setting) => (\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem>\n                  // <MenuItem  onClick={handleOpenFavorites}>\n                  //   <Typography textAlign=\"center\">Favorites</Typography>\n                  // </MenuItem>\n                ))} \n              </Menu>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {/* <Login /> */}\n      {/* <Favorites /> */}\n\n    </>\n  );\n}\nexport default Home;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js",["97","98"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Register from \"../Register/Register\"\nimport Grid from '@mui/material/Grid';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n\n        <Grid container justifyContent=\"center\">\n          <Grid container justifyContent=\"center\">\n            <h1>Login Here</h1>\n          </Grid>\n          <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n            <form onSubmit={handleFormSubmit}>\n              <InputLabel>Email</InputLabel>\n              <TextField \n                type=\"email\"\n                name=\"email\"\n                value={formState.email}\n                fullWidth\n                onChange={handleInputChange}\n              />\n              <InputLabel>Password</InputLabel>\n              <TextField\n                type=\"password\"\n                name=\"password\"\n                value={formState.password}\n                fullWidth\n                onChange={handleInputChange}\n              />\n              {/* <button type=\"submit\">Login User</button> */}\n              <Stack justifyContent=\"center\" direction=\"row\" spacing={2} padding={2}>\n                <Button variant=\"contained\" color=\"success\">\n                  Login User\n                </Button>\n              </Stack>\n            </form>\n          </Grid>\n\n          <Register />\n        </Grid>\n\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js",["99","100"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Register Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form onSubmit={handleFormSubmit}>\n            <InputLabel>Name</InputLabel>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={formState.name}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            {/* <button type=\"submit\">Register User</button> */}\n\n            <Stack justifyContent=\"center\" direction=\"row\" spacing={2} padding={2}>\n              <Button variant=\"contained\" color=\"success\">\n                Register User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Register;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js",["101","102","103"],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\auth.js",["104"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\mutations.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":9,"column":27,"nodeType":"111","messageId":"112","endLine":9,"endColumn":33},{"ruleId":"109","severity":1,"message":"113","line":9,"column":35,"nodeType":"111","messageId":"112","endLine":9,"endColumn":40},{"ruleId":"109","severity":1,"message":"114","line":9,"column":42,"nodeType":"111","messageId":"112","endLine":9,"endColumn":48},{"ruleId":"109","severity":1,"message":"115","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":16,"column":8,"nodeType":"111","messageId":"112","endLine":16,"endColumn":17},{"ruleId":"109","severity":1,"message":"117","line":20,"column":8,"nodeType":"111","messageId":"112","endLine":20,"endColumn":17},{"ruleId":"109","severity":1,"message":"118","line":23,"column":7,"nodeType":"111","messageId":"112","endLine":23,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":20,"column":19,"nodeType":"111","messageId":"112","endLine":20,"endColumn":24},{"ruleId":"109","severity":1,"message":"120","line":20,"column":26,"nodeType":"111","messageId":"112","endLine":20,"endColumn":30},{"ruleId":"109","severity":1,"message":"119","line":19,"column":22,"nodeType":"111","messageId":"112","endLine":19,"endColumn":27},{"ruleId":"109","severity":1,"message":"120","line":19,"column":29,"nodeType":"111","messageId":"112","endLine":19,"endColumn":33},{"ruleId":"109","severity":1,"message":"121","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"122","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":11},{"ruleId":"109","severity":1,"message":"123","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":28,"column":1,"nodeType":"126","endLine":28,"endColumn":34},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'Register' is defined but never used.","'HomePhoto' is defined but never used.","'Favorites' is defined but never used.","'pages' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'styled' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
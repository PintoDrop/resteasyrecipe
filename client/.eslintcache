[{"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\index.js":"1","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\App.js":"2","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js":"3","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\index.js":"4","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\index.js":"5","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js":"6","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js":"7","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js":"8","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\auth.js":"9","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\mutations.js":"10","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js":"11","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js":"12","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js":"13"},{"size":345,"mtime":1683048456694,"results":"14","hashOfConfig":"15"},{"size":1703,"mtime":1683059396665,"results":"16","hashOfConfig":"15"},{"size":40,"mtime":1683048456695,"results":"17","hashOfConfig":"15"},{"size":43,"mtime":1683048456694,"results":"18","hashOfConfig":"15"},{"size":38,"mtime":1683048456695,"results":"19","hashOfConfig":"15"},{"size":7177,"mtime":1683058703740,"results":"20","hashOfConfig":"15"},{"size":6565,"mtime":1683048456695,"results":"21","hashOfConfig":"15"},{"size":2207,"mtime":1683048456695,"results":"22","hashOfConfig":"15"},{"size":496,"mtime":1683048456696,"results":"23","hashOfConfig":"15"},{"size":518,"mtime":1683048456696,"results":"24","hashOfConfig":"15"},{"size":2378,"mtime":1683048456695,"results":"25","hashOfConfig":"15"},{"size":1442,"mtime":1683062581115,"results":"26","hashOfConfig":"15"},{"size":43,"mtime":1683058462745,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k3p0g9",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\App.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js",[],["59","60"],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js",["61"],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\n// import Login from \"../Login/Login\";\n\nconst pages = [\"Recipes\", \"Random\", \"Login/Register\"];\nconst settings = [\"Profile\", \"Create Recipe\", \"Favorites\", \"Logout\"];\n\nfunction Home({ pageState, setPageState }) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const handleOpenRecipes = () => {\n    setPageState({ ...pageState, recipes: true, random: false, login: false });\n  };\n\n  const handleOpenRandom = () => {\n    setPageState({ ...pageState, recipes: false, random: true, login: false });\n  };\n  const handleOpenLogin = () => {\n    setPageState({ ...pageState, recipes: false, random: false, login: true });\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <MenuBookIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n\n            {/* <Button href=\"/recipes\" variant=\"contained\">\n              Recipes\n            </Button> */}\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {/* {pages.map((page) => ( */}\n\n                {/* <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem> */}\n                <MenuItem onClick={handleOpenRecipes}>\n                  <Typography textAlign=\"center\">Recipes</Typography>\n                </MenuItem>\n                <MenuItem onClick={handleOpenRandom}>\n                  <Typography textAlign=\"center\">Random</Typography>\n                </MenuItem>\n                <MenuItem onClick={handleOpenLogin}>\n                  <Typography textAlign=\"center\">Login/Register</Typography>\n                </MenuItem>\n\n                {/* ))} */}\n              </Menu>\n            </Box>\n            <MenuBookIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {/* {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  {page}\n                </Button> */}\n              <Button\n                // key={page}\n                onClick={handleOpenRecipes}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Recipes\n              </Button>\n              <Button\n                // key={page}\n                onClick={handleOpenRandom}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Random\n              </Button>\n              <Button\n                // key={page}\n                onClick={handleOpenLogin}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Login/Register\n              </Button>\n              {/* ))} */}\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Options\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                  {/* need ${user} and avatar images, avater letter changes with name */}\n                  <Avatar alt=\"Remy\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: \"45px\" }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              >\n                {settings.map((setting) => (\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n\n      {/* <Login /> */}\n    </>\n  );\n}\nexport default Home;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js",["62","63"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Register from \"../Register/Register\"\nimport Grid from '@mui/material/Grid';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n\n        <Grid container justifyContent=\"center\">\n          <Grid container justifyContent=\"center\">\n            <h1>Login Here</h1>\n          </Grid>\n          <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n            <form onSubmit={handleFormSubmit}>\n              <InputLabel>Email</InputLabel>\n              <TextField \n                type=\"email\"\n                name=\"email\"\n                value={formState.email}\n                fullWidth\n                onChange={handleInputChange}\n              />\n              <InputLabel>Password</InputLabel>\n              <TextField\n                type=\"password\"\n                name=\"password\"\n                value={formState.password}\n                fullWidth\n                onChange={handleInputChange}\n              />\n              {/* <button type=\"submit\">Login User</button> */}\n              <Stack justifyContent=\"center\" direction=\"row\" spacing={2} padding={2}>\n                <Button variant=\"contained\" color=\"success\">\n                  Login User\n                </Button>\n              </Stack>\n            </form>\n          </Grid>\n\n          <Register />\n        </Grid>\n\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\auth.js",["64"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\utils\\mutations.js",[],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js",["65","66"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Register Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form onSubmit={handleFormSubmit}>\n            <InputLabel>Name</InputLabel>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={formState.name}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n            />\n            {/* <button type=\"submit\">Register User</button> */}\n\n            <Stack justifyContent=\"center\" direction=\"row\" spacing={2} padding={2}>\n              <Button variant=\"contained\" color=\"success\">\n                Register User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Register;\n","C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js",["67","68","69"],"C:\\Users\\putmi\\Programming\\Challenges\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":17,"column":7,"nodeType":"76","messageId":"77","endLine":17,"endColumn":12},{"ruleId":"74","severity":1,"message":"78","line":20,"column":19,"nodeType":"76","messageId":"77","endLine":20,"endColumn":24},{"ruleId":"74","severity":1,"message":"79","line":20,"column":26,"nodeType":"76","messageId":"77","endLine":20,"endColumn":30},{"ruleId":"80","severity":1,"message":"81","line":28,"column":1,"nodeType":"82","endLine":28,"endColumn":34},{"ruleId":"74","severity":1,"message":"78","line":19,"column":22,"nodeType":"76","messageId":"77","endLine":19,"endColumn":27},{"ruleId":"74","severity":1,"message":"79","line":19,"column":29,"nodeType":"76","messageId":"77","endLine":19,"endColumn":33},{"ruleId":"74","severity":1,"message":"83","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"84","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":11},{"ruleId":"74","severity":1,"message":"85","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'pages' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'styled' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\index.js":"1","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\App.js":"2","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\index.js":"3","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\index.js":"4","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js":"5","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js":"6","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js":"7","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js":"8","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\auth.js":"9","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\mutations.js":"10","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js":"11","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js":"12","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js":"13","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\index.js":"14","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\index.js":"15","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js":"16","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\index.js":"17","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js":"18","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js":"19","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js":"20","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\queries.js":"21","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js":"22","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js":"23"},{"size":345,"mtime":1682965438586,"results":"24","hashOfConfig":"25"},{"size":2162,"mtime":1683316342044,"results":"26","hashOfConfig":"25"},{"size":38,"mtime":1682712501433,"results":"27","hashOfConfig":"25"},{"size":43,"mtime":1682972446421,"results":"28","hashOfConfig":"25"},{"size":38,"mtime":1683063257910,"results":"29","hashOfConfig":"25"},{"size":3654,"mtime":1683301337512,"results":"30","hashOfConfig":"25"},{"size":12056,"mtime":1683316342046,"results":"31","hashOfConfig":"25"},{"size":4921,"mtime":1683316342049,"results":"32","hashOfConfig":"25"},{"size":499,"mtime":1683301337513,"results":"33","hashOfConfig":"25"},{"size":1493,"mtime":1683238316052,"results":"34","hashOfConfig":"25"},{"size":3903,"mtime":1683213176629,"results":"35","hashOfConfig":"25"},{"size":42,"mtime":1683062524336,"results":"36","hashOfConfig":"25"},{"size":1462,"mtime":1683225464346,"results":"37","hashOfConfig":"25"},{"size":41,"mtime":1682712501434,"results":"38","hashOfConfig":"25"},{"size":45,"mtime":1683063257904,"results":"39","hashOfConfig":"25"},{"size":42,"mtime":1682957195344,"results":"40","hashOfConfig":"25"},{"size":35,"mtime":1683063257908,"results":"41","hashOfConfig":"25"},{"size":4175,"mtime":1683316342045,"results":"42","hashOfConfig":"25"},{"size":5712,"mtime":1683319802648,"results":"43","hashOfConfig":"25"},{"size":4247,"mtime":1683316337367,"results":"44","hashOfConfig":"25"},{"size":527,"mtime":1683316342050,"results":"45","hashOfConfig":"25"},{"size":39,"mtime":1683316342048,"results":"46","hashOfConfig":"25"},{"size":4419,"mtime":1683316342047,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1plilpq",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\index.js",[],["104","105"],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\App.js",["106","107","108","109"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\nimport Register from \"./pages/Register\";\nimport CreateRecipe from \"./pages/Create\";\n\n// import Register from \"./pages/Register\";\nimport Recipes from \"./pages/Recipes\";\nimport Favorites from \"./pages/Favorites\";\nimport Random from \"./pages/Random\";\nimport MyRecipes from \"./pages/My Recipes\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport SearchBar from \"./pages/SearchBanner\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"auth_token\");\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [pageState, setPageState] = useState({\n    recipes: true,\n    random: false,\n    login: false,\n    create: false,\n    favorites: false,\n    search: true,\n    myRecipes: false,\n  });\n\n  return (\n    <>\n      <ApolloProvider client={client}>\n        {/* <Router>\n          <div>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n            </Routes>\n          </div>\n        </Router> */}\n        <Home pageState={pageState} setPageState={setPageState} />\n        {pageState.search ? <SearchBar /> : \"\"}\n        {pageState.recipes ? <Recipes /> : \"\"}\n        {pageState.random ? <Random /> : \"\"}\n        {pageState.login ? <Login /> : \"\"}\n        {pageState.create ? <CreateRecipe /> : \"\"}\n        {pageState.favorites ? <Favorites /> : \"\"}\n        {pageState.myRecipes ? <MyRecipes /> : \"\"}\n      </ApolloProvider>\n\n      <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js",["110"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Register from \"../Register/Register\"\nimport Grid from '@mui/material/Grid';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\n\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login() {\n\n\n  const [open, setOpen] = useState(true);\n  \n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  \n  \n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n  \n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Login Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Please check your login inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            {/* <button type=\"submit\">Login User</button> */}\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Login User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n\n        <Register />\n      </Grid>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js",["111","112","113","114","115","116"],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\n// import { useEffect } from \"react\"; \nimport { useState } from \"react\";\n\n\n\nimport Auth from \"../../utils/auth.js\";\n\n// const pages = [\"Recipes\", \"Random\", \"Login/Register\"];\n// const settings = [\"Profile\", \"Create Recipe\", \"Favorites\", \"Logout\"];\n\nfunction Home({ pageState, setPageState }) {\n  // const authStatus = localStorage.getItem(\"auth\")\n\n  // const [loginStatus, setLoginStatus] = React.useState(false)\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  // const [showButton, setShowButton] = useState(false);\n\n  // useEffect(()=> {\n  //   checkStorage();\n  //   return () => {}\n  // }, [loginStatus])\n\n  // const checkStorage= () => {\n  //   if (localStorage.getItem(\"loginStatus\")) {\n  //     setLoginStatus(true)\n  //   } else {\n  //     setLoginStatus(false)\n  //   }\n  // }\n\n  // const logOut = () => {\n  //   localStorage.removeItem(\"loginStatus\");\n  //   setLoginStatus(false)\n  // }\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  // setLoginStatus(localStorage.getItem(\"loginStatus\"));\n\n  const handleOpenRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: true,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: true,\n      myRecipes: false,\n    });\n    // setLoginStatus(true);\n  };\n\n  const handleOpenRandom = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: true,\n      login: false,\n      create: false,\n      favorites: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n  const handleOpenLogin = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: true,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n    // localStorage.setItem(\"loginStatus\", true)\n  };\n  const handleOpenFavorites = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      favorites: true,\n      create: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n  const handleOpenCreateRecipe = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: true,\n      favorites: false,\n      search: false,\n      myRecipes:false\n    });\n  };\n  const handleOpenMyRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes:true\n    });\n  };\n\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <MenuBookIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n\n            {/* <Button href=\"/recipes\" variant=\"contained\">\n              Recipes\n            </Button> */}\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {/* {pages.map((page) => ( */}\n\n                {/* <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem> */}\n                <MenuItem onClick={handleOpenRecipes}>\n                  <Typography textAlign=\"center\">Recipes</Typography>\n                </MenuItem>\n                {Auth.loggedIn() ? (\n                  <>\n                    <MenuItem onClick={handleOpenRandom}>\n                      <Typography textAlign=\"center\">Random</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenCreateRecipe}>\n                      <Typography textAlign=\"center\">Create Recipe</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenFavorites}>\n                      <Typography textAlign=\"center\">Favorites</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={Auth.logout}>\n                      <Typography textAlign=\"center\">Log Out</Typography>\n                    </MenuItem>\n                  </>\n                ) : (\n                  <MenuItem onClick={handleOpenLogin}>\n                    <Typography textAlign=\"center\">Login/Register</Typography>\n                  </MenuItem>\n                )}\n\n                {/* ))} */}\n              </Menu>\n            </Box>\n            <MenuBookIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {/* {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  {page}\n                </Button> */}\n\n              <Button\n                onClick={handleOpenRecipes}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                Recipes\n              </Button>\n              {/* {loginStatus ? ( */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Button\n                    onClick={handleOpenRandom}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    Random\n                  </Button>\n                  <Button\n                    onClick={handleOpenCreateRecipe}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    Create Recipe\n                  </Button>\n                  <Button\n                    onClick={handleOpenMyRecipes}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    My Recipes\n                  </Button>\n                  <Button\n                    onClick={handleOpenFavorites}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    Favorites\n                  </Button>\n\n                  <Button\n                    onClick={Auth.logout}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    Logout\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  onClick={handleOpenLogin}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  Login/Register\n                </Button>\n              )}\n              {/* // <Button */}\n              {/* onClick={handleOpenRandom}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n               Random\n               </Button> */}\n              {/* ) : (<span></span>) */}\n\n              {/* }    */}\n              {/* {!loginStatus ? ( */}\n\n              {/* <Button\n                  onClick={handleOpenLogin}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  Login/Register\n                </Button> */}\n              {/* ) : ( */}\n              {/* <span></span> */}\n              {/* )} */}\n\n              {/* ))} */}\n            </Box>\n\n            {/* <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Options\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}> */}\n            {/* need ${user} and avatar images, avater letter changes with name */}\n            {/* <Avatar alt=\"Remy\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: \"45px\" }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              > */}\n            {/* {settings.map((setting) => ( */}\n            {/* <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem> */}\n\n            {/* {loginStatus ? ( */}\n            {/* {Auth.loggedIn() ? (\n\n                  <>\n                    <MenuItem onClick={handleOpenCreateRecipe}>\n                      <Typography textAlign=\"center\">Create Recipe</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenFavorites}>\n                      <Typography textAlign=\"center\">Favorites</Typography>\n                    </MenuItem>\n                  </>\n                ): (\n\n                    <MenuItem onClick={Auth.logout}>\n                      <Typography textAlign=\"center\">Logout</Typography>\n                    </MenuItem>\n\n                )} */}\n            {/* ) : (\n                  null\n                )} */}\n\n            {/* ))}  */}\n            {/* </Menu>\n            </Box> */}\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {/* <Favorites /> */}\n    </>\n  );\n}\nexport default Home;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\auth.js",["117"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\mutations.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js",["118"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [open, setOpen] = useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n   useEffect(() => {\n     if (error) {\n       setShowAlert(true);\n     } else {\n       setShowAlert(false);\n     }\n   }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      name: '',\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Register Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Something went wrong. Check your inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Name</InputLabel>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={formState.name}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            {/* <button type=\"submit\">Register User</button> */}\n\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Register User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Register;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js",["119","120","121"],"import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport HomePhoto from \"../../Images/foodBanner.png\";\nimport TextField from \"@mui/material/TextField\";\nimport { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\n\nfunction SearchBar() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const onSearch = (searchItem) => {\n    console.log(\"search\", searchItem);\n  };\n  return (\n    <>\n      <Grid\n        sx={{\n          backgroundImage: `url(${HomePhoto})`,\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          height: 500,\n          width: \"100%\",\n        }}\n      >\n        <Grid container justifyContent={\"center\"} padding={20}>\n          <TextField\n            sx={{ backgroundColor: \"whitesmoke\", width: 600 }}\n            id=\"search\"\n            type=\"search\"\n            value={searchTerm}\n            label=\"Search\"\n            onChange={handleChange}\n            margin=\"dense\"\n          />\n          <Grid padding={2}>\n            <Button variant=\"contained\" onClick={() => onSearch(searchTerm)}>\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default SearchBar;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js",["122"],"// export default CreateRecipe;\nimport { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_RECIPE } from \"../../utils/mutations\";\n\nexport const CreateRecipe = () => {\n\n  const [recipe, setRecipe] = useState({\n    name: \"\",\n    region: \"\",\n    description: \"\",\n    cookTime: 0,\n    ingredients: \"\",\n    instructions: \"\",\n    image: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"cookTime\") {\n      if (value < 0) {\n        setRecipe({...recipe, [name]: 0});\n        return;\n      }\n    }\n    setRecipe({ ...recipe, [name]: value });\n  };\n\n  const handleImageChange = (event) => {\n    setRecipe({ ...recipe, image: event.target.files[0] });\n  };\n\n  const [createRecipe] = useMutation(CREATE_RECIPE);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(recipe);\n    try {\n      const { data } = await createRecipe({\n        variables: {\n          name: recipe.name,\n          region: recipe.region,\n          description: recipe.description,\n          cookTime: parseInt(recipe.cookTime),\n          ingredients: recipe.ingredients.split(\"/\\r\\n/\"),\n          instructions: recipe.instructions.split(\"/\\r\\n/\"),\n          image: recipe.image,\n          //          image: recipe.image,\n        },\n      });\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h2>Create A Recipe</h2>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form onSubmit={handleSubmit}>\n            <InputLabel htmlFor=\"name\">Name</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <InputLabel htmlFor=\"region\">Region</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"region\"\n              name=\"region\"\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <InputLabel htmlFor=\"description\">Description</InputLabel>\n            <TextField\n              id=\"description\"\n              name=\"description\"\n              multiline\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <InputLabel htmlFor=\"cookTime\">Cook Time (minutes) </InputLabel>\n            <TextField\n              type=\"number\"\n              id=\"cookTime\"\n              name=\"cookTime\"\n              fullWidth\n              onChange={handleChange}\n            />\n\n            <InputLabel htmlFor=\"ingredients\">Ingredients</InputLabel>\n            <TextField\n              id=\"ingredients\"\n              name=\"ingredients\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n            />\n\n            <InputLabel htmlFor=\"instructions\">Instructions</InputLabel>\n            <TextField\n              id=\"instructions\"\n              name=\"instructions\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n            />\n            <InputLabel htmlFor=\"image\">Image</InputLabel>\n            <TextField\n              id=\"image\"\n              name=\"image\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n            />\n\n          \n\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={event => window.location.href=\"/myrecipes\"}\n              >\n                Submit Recipe\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateRecipe;\n","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js",["123"],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js",["124","125","126"],"import React from \"react\";\nimport Recipes from \"../Recipes\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport { useState } from \"react\";\n\n\nconst CookingStyleDropdown = ({ styles, onStyleSelected }) => {\n  const [selectedStyle, setSelectedStyle] = useState('');\n\n  const handleSelectChange = (event) => {\n    const selectedStyle = event.target.value;\n    setSelectedStyle(selectedStyle);\n    onStyleSelected(selectedStyle);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"style-dropdown\">Select a cooking style: </label>\n      <select id=\"style-dropdown\" value={selectedStyle} onChange={handleSelectChange}>\n        <option value=\"\">-- Please select --</option>\n        {styles.map((style) => (\n          <option key={style} value={style}>\n            {style}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst RandomRecipePicker = ({ recipes }) => {\n  const [randomRecipes, setRandomRecipes] = useState([]);\n\n  const handleStyleSelected = (selectedStyle) => {\n    const filteredRecipes = recipes.filter(\n      (recipe) => recipe.cookingStyle.toLowerCase() === selectedStyle.toLowerCase()\n    );\n    if (filteredRecipes.length === 0) {\n      alert(\"No recipes found for the specified cooking style.\");\n      return;\n    }\n    const randomIndexes = [];\n    while (randomIndexes.length < 3 && randomIndexes.length < filteredRecipes.length) {\n      const randomIndex = Math.floor(Math.random() * filteredRecipes.length);\n      if (!randomIndexes.includes(randomIndex)) {\n        randomIndexes.push(randomIndex);\n      }\n    }\n    const randomRecipes = randomIndexes.map((index) => filteredRecipes[index]);\n    setRandomRecipes(randomRecipes);\n  };\n\n  const styles = Array.from(new Set(recipes.map((recipe) => recipe.cookingStyle)));\n\n  return (\n    <div>\n      <CookingStyleDropdown\n        styles={styles}\n        onStyleSelected={handleStyleSelected}\n      />\n      {randomRecipes.length > 0 && (\n        <div>\n          <h3>Random Recipes:</h3>\n          <ul>\n            {randomRecipes.map((recipe) => (\n              <li key={recipe.name}>{recipe.name}</li>\n            ))}\n\n            {/* <Grid container justifyContent=\"center\">\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handlePickRandomRecipe}\n              >\n                Find Random Recipe\n              </Button>\n              <Recipes data={randomRecipes} />\n            </Grid> */}\n\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RandomRecipePicker;\n\n\n/* /* \n\n\n//   // replace with data from API\n//   const recipes = [\"chicken tacos\"];\n//   const [randoRecipe, setRandoRecipe] = useState();\n\n/* function RandomRecipePicker() {\n  const [recipes, setRecipes] = useState([]);\n  const [selectedCookingStyle, setSelectedCookingStyle] = useState(\"\");\n  const [randomRecipe, setRandomRecipe] = useState(null);\n\n  // filter recipe\n  const handlePickRandomRecipe = () => {\n    // filtering the recipe to only \"style/region\" that we picked\n    const filteredRecipes = recipes.filter(\n      (recipe) => recipe.cookingStyle === selectedCookingStyle\n    );\n    // picking the random recipe\n    const randomIndex = Math.floor(Math.random() * filteredRecipes.length);\n    const randomRecipe = filteredRecipes[randomIndex];\n    // setting the recipe\n    setRandomRecipe(randomRecipe);\n  }; */\n\n  /*   const handleClick = () => {\n      var randomIndex = Math.floor(Math.random() * recipes.length);\n      setRandoRecipe(recipes[randomIndex]);\n    \n  }; */\n  //   const randoIndex = Math.floor(math.random() * recipe.length);\n\n  /* return (\n    <div>\n      <Grid container justifyContent=\"center\">\n        <h1>Random Recipe</h1>\n      </Grid>\n      <Grid container justifyContent=\"center\">\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          onClick={handlePickRandomRecipe}\n        >\n          Find Random Recipe\n        </Button>\n      </Grid>\n\n      { </Grid> }\n      { data rendered needs to go on a card once api is data is functional. Conditional render (if data) }\n      <Recipes data={randoRecipe} />\n\n    </div>\n    // </>\n  );\n} */\n\n//     data\n//\n//\n//\n//\n//\n// render(Recipe)\n//\n//\n//\n//\n//\n//\n//","C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\utils\\queries.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js",[],"C:\\Users\\highf\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js",["127"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport StarsRating from \"stars-rating\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\n// export default\nfunction Recipes() {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const user = data?.me || {};\n\n  console.log(user.name);\n\n  console.log(user.recipes);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <Typography variant=\"h3\" align=\"center\">\n        {\" \"}\n        {user.name}'s Recipes\n      </Typography>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {user.recipes.map((recipe) => (\n          <Card\n            sx={{\n              maxWidth: 345,\n              marginRight: 10,\n              marginLeft: 10,\n              marginBottom: \"20px\",\n            }}\n            key={recipe.name}\n          >\n            <CardHeader\n              avatar={\n                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n                  {/* user avatar goes here */}\n                </Avatar>\n              }\n              title={recipe.name}\n            />\n            <CardMedia\n              component=\"img\"\n              // height=\"194\"\n              className=\"card-image\"\n              image={recipe.image}\n              title={recipe.name}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                <h2>Description: </h2>\n                <p>{recipe.description}</p>\n\n                <StarsRating\n                  count={5}\n                  value={user.recipes.rate}\n                  //onChange={ratingChange}\n                  size={24}\n                  color2={\"#ffd700\"}\n                />\n              </Typography>\n            </CardContent>\n\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"add to favorites\">\n                <FavoriteIcon />\n              </IconButton>\n\n              <ExpandMore\n                expand={expanded}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </ExpandMore>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph>\n                  <h3>Directions: </h3>\n                  {recipe.instructions}\n                </Typography>\n                <Typography paragraph>\n                  <h3>Ingredients: </h3>\n                  {recipe.ingredients}\n                </Typography>\n                <Typography paragraph>\n                  <h3>Cook time: </h3>\n                  {recipe.cookTime}\n                  <p> minutes</p>\n                </Typography>\n                <Typography>\n                  <h3>Region: </h3>\n                  {recipe.region}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </Card>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Recipes;\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":27,"nodeType":"134","messageId":"135","endLine":9,"endColumn":33},{"ruleId":"132","severity":1,"message":"136","line":9,"column":35,"nodeType":"134","messageId":"135","endLine":9,"endColumn":40},{"ruleId":"132","severity":1,"message":"137","line":9,"column":42,"nodeType":"134","messageId":"135","endLine":9,"endColumn":48},{"ruleId":"132","severity":1,"message":"138","line":14,"column":8,"nodeType":"134","messageId":"135","endLine":14,"endColumn":16},{"ruleId":"132","severity":1,"message":"139","line":35,"column":26,"nodeType":"134","messageId":"135","endLine":35,"endColumn":30},{"ruleId":"132","severity":1,"message":"140","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":14},{"ruleId":"132","severity":1,"message":"141","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":15},{"ruleId":"132","severity":1,"message":"142","line":16,"column":10,"nodeType":"134","messageId":"135","endLine":16,"endColumn":18},{"ruleId":"132","severity":1,"message":"143","line":30,"column":10,"nodeType":"134","messageId":"135","endLine":30,"endColumn":22},{"ruleId":"132","severity":1,"message":"144","line":55,"column":9,"nodeType":"134","messageId":"135","endLine":55,"endColumn":27},{"ruleId":"132","severity":1,"message":"145","line":63,"column":9,"nodeType":"134","messageId":"135","endLine":63,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":28,"column":1,"nodeType":"148","endLine":28,"endColumn":34},{"ruleId":"132","severity":1,"message":"139","line":30,"column":29,"nodeType":"134","messageId":"135","endLine":30,"endColumn":33},{"ruleId":"132","severity":1,"message":"149","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"150","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":11},{"ruleId":"132","severity":1,"message":"151","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"152","line":34,"column":9,"nodeType":"134","messageId":"135","endLine":34,"endColumn":26},{"ruleId":"132","severity":1,"message":"153","line":39,"column":27,"nodeType":"134","messageId":"135","endLine":39,"endColumn":45},{"ruleId":"132","severity":1,"message":"154","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":15},{"ruleId":"132","severity":1,"message":"155","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"156","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":12},{"ruleId":"132","severity":1,"message":"142","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'Register' is defined but never used.","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'useState' is defined but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'styled' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'handleImageChange' is assigned a value but never used.","'setFavoriteRecipes' is assigned a value but never used.","'Recipes' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]

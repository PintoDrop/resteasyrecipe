[{"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\index.js":"1","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\App.js":"2","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\index.js":"3","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\index.js":"4","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\index.js":"5","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\index.js":"6","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js":"7","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js":"8","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js":"9","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\index.js":"10","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js":"11","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js":"12","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js":"13","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js":"14","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js":"15","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js":"16","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js":"17","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js":"18","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js":"19","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js":"20","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\auth.js":"21","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\mutations.js":"22","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\queries.js":"23","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\RecipeCard.js":"24","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\index.js":"25"},{"size":345,"mtime":1682965415774,"results":"26","hashOfConfig":"27"},{"size":2163,"mtime":1683424043514,"results":"28","hashOfConfig":"27"},{"size":41,"mtime":1682713852565,"results":"29","hashOfConfig":"27"},{"size":38,"mtime":1682713852564,"results":"30","hashOfConfig":"27"},{"size":43,"mtime":1682972882688,"results":"31","hashOfConfig":"27"},{"size":45,"mtime":1683063285716,"results":"32","hashOfConfig":"27"},{"size":42,"mtime":1683062590917,"results":"33","hashOfConfig":"27"},{"size":38,"mtime":1683063285718,"results":"34","hashOfConfig":"27"},{"size":39,"mtime":1683313385097,"results":"35","hashOfConfig":"27"},{"size":35,"mtime":1683063267899,"results":"36","hashOfConfig":"27"},{"size":42,"mtime":1682965415775,"results":"37","hashOfConfig":"27"},{"size":3903,"mtime":1683187944749,"results":"38","hashOfConfig":"27"},{"size":13760,"mtime":1683425382492,"results":"39","hashOfConfig":"27"},{"size":3654,"mtime":1683407996997,"results":"40","hashOfConfig":"27"},{"size":4596,"mtime":1683425382491,"results":"41","hashOfConfig":"27"},{"size":5585,"mtime":1683341688428,"results":"42","hashOfConfig":"27"},{"size":1129,"mtime":1683426675438,"results":"43","hashOfConfig":"27"},{"size":6644,"mtime":1683430663579,"results":"44","hashOfConfig":"27"},{"size":3476,"mtime":1683428900448,"results":"45","hashOfConfig":"27"},{"size":968,"mtime":1683424812605,"results":"46","hashOfConfig":"27"},{"size":499,"mtime":1683306225452,"results":"47","hashOfConfig":"27"},{"size":1493,"mtime":1683262204135,"results":"48","hashOfConfig":"27"},{"size":794,"mtime":1683341688432,"results":"49","hashOfConfig":"27"},{"size":3863,"mtime":1683429493717,"results":"50","hashOfConfig":"27"},{"size":40,"mtime":1683424788598,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1c5pzbr",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\index.js",[],["110","111"],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\App.js",["112","113","114","115"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\nimport Register from \"./pages/Register\";\nimport CreateRecipe from \"./pages/Create\";\n\n// import Register from \"./pages/Register\";\nimport Recipes from \"./pages/Recipes\";\nimport Favorites from \"./pages/Favorites\";\nimport Random from \"./pages/Random\";\nimport MyRecipes from \"./pages/My Recipes\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport SearchBar from \"./pages/SearchBanner\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"auth_token\");\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [pageState, setPageState] = useState({\n    recipes: true,\n    random: false,\n    login: false,\n    create: false,\n    favorites: false,\n    search: true,\n    myRecipes: false,\n  });\n\n  return (\n    <>\n      <ApolloProvider client={client}>\n        {/* <Router>\n          <div>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n            </Routes>\n          </div>\n        </Router> */}\n\n        <Home pageState={pageState} setPageState={setPageState} />\n        {pageState.search ? <SearchBar /> : \"\"}\n        {pageState.recipes ? <Recipes /> : \"\"}\n        {pageState.random ? <Random /> : \"\"}\n        {pageState.login ? <Login /> : \"\"}\n        {pageState.create ? <CreateRecipe /> : \"\"}\n        {pageState.favorites ? <Favorites /> : \"\"}\n        {pageState.myRecipes ? <MyRecipes /> : \"\"}\n      </ApolloProvider>\n\n      <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js",["116"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [open, setOpen] = useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n   useEffect(() => {\n     if (error) {\n       setShowAlert(true);\n     } else {\n       setShowAlert(false);\n     }\n   }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      name: '',\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Register Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Something went wrong. Check your inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Name</InputLabel>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={formState.name}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            {/* <button type=\"submit\">Register User</button> */}\n\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Register User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Register;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js",["117","118","119","120","121","122"],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\nimport AllInclusiveTwoToneIcon from \"@mui/icons-material/AllInclusiveTwoTone\";\nimport FavoriteTwoToneIcon from \"@mui/icons-material/FavoriteTwoTone\";\nimport PermIdentityTwoToneIcon from \"@mui/icons-material/PermIdentityTwoTone\";\n// import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport FastfoodTwoToneIcon from \"@mui/icons-material/FastfoodTwoTone\";\nimport DriveFileRenameOutlineTwoToneIcon from \"@mui/icons-material/DriveFileRenameOutlineTwoTone\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport MenuBookTwoToneIcon from \"@mui/icons-material/MenuBookTwoTone\";\nimport Person2TwoToneIcon from \"@mui/icons-material/Person2TwoTone\";\nimport Auth from \"../../utils/auth.js\";\n\n// const pages = [\"Recipes\", \"Random\", \"Login/Register\"];\n// const settings = [\"Profile\", \"Create Recipe\", \"Favorites\", \"Logout\"];\n\nfunction Home({ pageState, setPageState }) {\n  // const authStatus = localStorage.getItem(\"auth\")\n\n  // const [loginStatus, setLoginStatus] = React.useState(false)\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  // const [showButton, setShowButton] = useState(false);\n\n  // useEffect(()=> {\n  //   checkStorage();\n  //   return () => {}\n  // }, [loginStatus])\n\n  // const checkStorage= () => {\n  //   if (localStorage.getItem(\"loginStatus\")) {\n  //     setLoginStatus(true)\n  //   } else {\n  //     setLoginStatus(false)\n  //   }\n  // }\n\n  // const logOut = () => {\n  //   localStorage.removeItem(\"loginStatus\");\n  //   setLoginStatus(false)\n  // }\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  // setLoginStatus(localStorage.getItem(\"loginStatus\"));\n\n  const handleOpenRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: true,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: true,\n      myRecipes: false,\n    });\n    // setLoginStatus(true);\n  };\n\n  const handleOpenRandom = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: true,\n      login: false,\n      create: false,\n      favorites: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n  const handleOpenLogin = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: true,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n    // localStorage.setItem(\"loginStatus\", true)\n  };\n  const handleOpenFavorites = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      favorites: true,\n      create: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n  const handleOpenCreateRecipe = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: true,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n  };\n  const handleOpenMyRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: true,\n    });\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" style={{ background: \"#b71c1c\" }}>\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <MenuBookIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n            <Typography\n              variant=\"h4\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n\n            {/* <Button href=\"/recipes\" variant=\"contained\">\n              Recipes\n            </Button> */}\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {/* {pages.map((page) => ( */}\n\n                {/* <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Typography textAlign=\"center\">{page}</Typography>\n                  </MenuItem> */}\n                <MenuItem onClick={handleOpenRecipes}>\n                  <FastfoodTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                  <Typography textAlign=\"center\">Recipes</Typography>\n                </MenuItem>\n                {Auth.loggedIn() ? (\n                  <>\n                    <MenuItem onClick={handleOpenRandom}>\n                      <AllInclusiveTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Random</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenCreateRecipe}>\n                      <DriveFileRenameOutlineTwoToneIcon\n                        sx={{ marginRight: \"10px\" }}\n                      />\n                      <Typography textAlign=\"center\">Create Recipe</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenFavorites}>\n                      <FavoriteTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Favorites</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={Auth.logout}>\n                      <LogoutTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Log Out</Typography>\n                    </MenuItem>\n                  </>\n                ) : (\n                  <MenuItem onClick={handleOpenLogin}>\n                    <PermIdentityTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                    <Typography textAlign=\"center\">Login/Register</Typography>\n                  </MenuItem>\n                )}\n\n                {/* ))} */}\n              </Menu>\n            </Box>\n            <MenuBookIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {/* {pages.map((page) => (\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  {page}\n                </Button> */}\n\n              <Button\n                onClick={handleOpenRecipes}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                <FastfoodTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                Recipes\n              </Button>\n              {/* {loginStatus ? ( */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Button\n                    onClick={handleOpenRandom}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <AllInclusiveTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Random\n                  </Button>\n                  <Button\n                    onClick={handleOpenCreateRecipe}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <DriveFileRenameOutlineTwoToneIcon\n                      sx={{ marginRight: \"5px\" }}\n                    />\n                    Create Recipe\n                  </Button>\n                  <Button\n                    onClick={handleOpenMyRecipes}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <MenuBookTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    My Recipes\n                  </Button>\n                  <Button\n                    onClick={handleOpenFavorites}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <FavoriteTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Favorites\n                  </Button>\n\n                  <Button\n                    onClick={Auth.logout}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <LogoutTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Logout\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  onClick={handleOpenLogin}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  <Person2TwoToneIcon sx={{ marginRight: \"5px\" }} />\n                  Login/Register\n                </Button>\n              )}\n              {/* // <Button */}\n              {/* onClick={handleOpenRandom}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n               Random\n               </Button> */}\n              {/* ) : (<span></span>) */}\n\n              {/* }    */}\n              {/* {!loginStatus ? ( */}\n\n              {/* <Button\n                  onClick={handleOpenLogin}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  Login/Register\n                </Button> */}\n              {/* ) : ( */}\n              {/* <span></span> */}\n              {/* )} */}\n\n              {/* ))} */}\n            </Box>\n\n            {/* <Box sx={{ flexGrow: 0 }}>\n              <Tooltip title=\"Options\">\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}> */}\n            {/* need ${user} and avatar images, avater letter changes with name */}\n            {/* <Avatar alt=\"Remy\" src=\"/static/images/avatar/2.jpg\" />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                sx={{ mt: \"45px\" }}\n                id=\"menu-appbar\"\n                anchorEl={anchorElUser}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorElUser)}\n                onClose={handleCloseUserMenu}\n              > */}\n            {/* {settings.map((setting) => ( */}\n            {/* <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                    <Typography textAlign=\"center\">{setting}</Typography>\n                  </MenuItem> */}\n\n            {/* {loginStatus ? ( */}\n            {/* {Auth.loggedIn() ? (\n\n                  <>\n                    <MenuItem onClick={handleOpenCreateRecipe}>\n                      <Typography textAlign=\"center\">Create Recipe</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenFavorites}>\n                      <Typography textAlign=\"center\">Favorites</Typography>\n                    </MenuItem>\n                  </>\n                ): (\n\n                    <MenuItem onClick={Auth.logout}>\n                      <Typography textAlign=\"center\">Logout</Typography>\n                    </MenuItem>\n\n                )} */}\n            {/* ) : (\n                  null\n                )} */}\n\n            {/* ))}  */}\n            {/* </Menu>\n            </Box> */}\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {/* <Favorites /> */}\n    </>\n  );\n}\nexport default Home;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js",["123"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Register from \"../Register/Register\"\nimport Grid from '@mui/material/Grid';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\n\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login() {\n\n\n  const [open, setOpen] = useState(true);\n  \n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  \n  \n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n  \n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Login Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Please check your login inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            {/* <button type=\"submit\">Login User</button> */}\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Login User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n\n        <Register />\n      </Grid>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js",["124","125","126","127","128","129"],"// export default CreateRecipe;\nimport { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_RECIPE } from \"../../utils/mutations\";\nimport { useNavigate } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport Paper from \"@mui/material/Paper\";\n\n\nexport const CreateRecipe = () => {\n\n  const [recipe, setRecipe] = useState({\n    name: \"\",\n    region: \"\",\n    description: \"\",\n    cookTime: 0,\n    ingredients: \"\",\n    instructions: \"\",\n    image: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"cookTime\") {\n      if (value < 0) {\n        setRecipe({ ...recipe, [name]: 0 });\n        return;\n      }\n    }\n    setRecipe({ ...recipe, [name]: value });\n  };\n\n  const handleImageChange = (event) => {\n    setRecipe({ ...recipe, image: event.target.files[0] });\n  };\n\n  const [createRecipe] = useMutation(CREATE_RECIPE);\n\n   \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(recipe);\n    try {\n      const { data } = await createRecipe({\n        variables: {\n          name: recipe.name,\n          region: recipe.region.toLowerCase(),\n          description: recipe.description,\n          cookTime: parseInt(recipe.cookTime),\n          ingredients: recipe.ingredients.split(\"/\\r\\n/\"),\n          instructions: recipe.instructions.split(\"/\\r\\n/\"),\n          image: recipe.image,\n          //          image: recipe.image,\n        },\n      });\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h2>Create A Recipe</h2>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form onSubmit={handleSubmit}>\n            <InputLabel htmlFor=\"name\">Name</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              onChange={handleChange}\n              fullWidth\n              required\n            />\n\n            <InputLabel htmlFor=\"region\">Region</InputLabel>\n            <TextField\n              type=\"text\"\n              id=\"region\"\n              name=\"region\"\n              onChange={handleChange}\n              fullWidth\n              required\n            />\n\n            <InputLabel htmlFor=\"description\">Description</InputLabel>\n            <TextField\n              id=\"description\"\n              name=\"description\"\n              multiline\n              onChange={handleChange}\n              fullWidth\n              required\n            />\n\n            <InputLabel htmlFor=\"cookTime\">Cook Time (minutes) </InputLabel>\n            <TextField\n              type=\"number\"\n              id=\"cookTime\"\n              name=\"cookTime\"\n              fullWidth\n              onChange={handleChange}\n              required\n            />\n\n            <InputLabel htmlFor=\"ingredients\">Ingredients</InputLabel>\n            <TextField\n              id=\"ingredients\"\n              name=\"ingredients\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n              required\n            />\n\n            <InputLabel htmlFor=\"instructions\">Instructions</InputLabel>\n            <TextField\n              id=\"instructions\"\n              name=\"instructions\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n              required\n            />\n            <InputLabel htmlFor=\"image\">Image</InputLabel>\n            <TextField\n              id=\"image\"\n              name=\"image\"\n              onChange={handleChange}\n              fullWidth\n              multiline\n              required\n            />\n\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={(event) => (window.location.href = \"/myrecipes\")}\n                style={{ background: \"#dd2c00\" }}\n              >\n                Submit Recipe\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateRecipe;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js",["130","131"],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js",["132"],"import * as React from \"react\";\nimport RecipeCard from \"../RecipeCard\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\n\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\n\n\n// export default\nfunction Recipes() {\n\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const user = data?.me || {};\n\n  console.log(user.name);\n\n  console.log(user.recipes);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <Typography marginTop=\"30px\" variant=\"h3\" align=\"center\">\n        {\" \"}\n        {user.name}'s Recipes\n      </Typography>\n      \n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {user.recipes.map((recipe) => (\n         <RecipeCard recipe={recipe} user={user}/>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Recipes;\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\auth.js",["133"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\mutations.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\utils\\queries.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\RecipeCard.js",[],"C:\\Users\\khtbe\\Desktop\\bootcamp\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\index.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":9,"column":27,"nodeType":"140","messageId":"141","endLine":9,"endColumn":33},{"ruleId":"138","severity":1,"message":"142","line":9,"column":35,"nodeType":"140","messageId":"141","endLine":9,"endColumn":40},{"ruleId":"138","severity":1,"message":"143","line":9,"column":42,"nodeType":"140","messageId":"141","endLine":9,"endColumn":48},{"ruleId":"138","severity":1,"message":"144","line":14,"column":8,"nodeType":"140","messageId":"141","endLine":14,"endColumn":16},{"ruleId":"138","severity":1,"message":"145","line":30,"column":29,"nodeType":"140","messageId":"141","endLine":30,"endColumn":33},{"ruleId":"138","severity":1,"message":"146","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"138","severity":1,"message":"147","line":12,"column":8,"nodeType":"140","messageId":"141","endLine":12,"endColumn":15},{"ruleId":"138","severity":1,"message":"148","line":19,"column":10,"nodeType":"140","messageId":"141","endLine":19,"endColumn":18},{"ruleId":"138","severity":1,"message":"149","line":35,"column":10,"nodeType":"140","messageId":"141","endLine":35,"endColumn":22},{"ruleId":"138","severity":1,"message":"150","line":60,"column":9,"nodeType":"140","messageId":"141","endLine":60,"endColumn":27},{"ruleId":"138","severity":1,"message":"151","line":68,"column":9,"nodeType":"140","messageId":"141","endLine":68,"endColumn":28},{"ruleId":"138","severity":1,"message":"145","line":35,"column":26,"nodeType":"140","messageId":"141","endLine":35,"endColumn":30},{"ruleId":"138","severity":1,"message":"152","line":2,"column":20,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"138","severity":1,"message":"153","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":21},{"ruleId":"138","severity":1,"message":"154","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":12,"column":8,"nodeType":"140","messageId":"141","endLine":12,"endColumn":13},{"ruleId":"138","severity":1,"message":"156","line":13,"column":8,"nodeType":"140","messageId":"141","endLine":13,"endColumn":13},{"ruleId":"138","severity":1,"message":"157","line":39,"column":9,"nodeType":"140","messageId":"141","endLine":39,"endColumn":26},{"ruleId":"138","severity":1,"message":"158","line":22,"column":10,"nodeType":"140","messageId":"141","endLine":22,"endColumn":18},{"ruleId":"138","severity":1,"message":"159","line":24,"column":8,"nodeType":"140","messageId":"141","endLine":24,"endColumn":18},{"ruleId":"138","severity":1,"message":"160","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":28,"column":1,"nodeType":"163","endLine":28,"endColumn":34},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'Register' is defined but never used.","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'useState' is defined but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'Paper' is defined but never used.","'handleImageChange' is assigned a value but never used.","'useQuery' is defined but never used.","'RecipeCard' is defined but never used.","'red' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]

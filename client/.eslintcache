[{"D:\\resteasyrecipe\\client\\src\\index.js":"1","D:\\resteasyrecipe\\client\\src\\App.js":"2","D:\\resteasyrecipe\\client\\src\\pages\\Register\\index.js":"3","D:\\resteasyrecipe\\client\\src\\pages\\Home\\index.js":"4","D:\\resteasyrecipe\\client\\src\\pages\\Login\\index.js":"5","D:\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js":"6","D:\\resteasyrecipe\\client\\src\\pages\\Create\\index.js":"7","D:\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js":"8","D:\\resteasyrecipe\\client\\src\\pages\\Random\\index.js":"9","D:\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js":"10","D:\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js":"11","D:\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js":"12","D:\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js":"13","D:\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js":"14","D:\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js":"15","D:\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js":"16","D:\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js":"17","D:\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js":"18","D:\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js":"19","D:\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js":"20","D:\\resteasyrecipe\\client\\src\\utils\\auth.js":"21","D:\\resteasyrecipe\\client\\src\\utils\\mutations.js":"22","D:\\resteasyrecipe\\client\\src\\utils\\queries.js":"23","D:\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\RecipeCard.js":"24","D:\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\index.js":"25"},{"size":345,"mtime":1682965654894,"results":"26","hashOfConfig":"27"},{"size":1826,"mtime":1683508740405,"results":"28","hashOfConfig":"27"},{"size":41,"mtime":1682714129007,"results":"29","hashOfConfig":"27"},{"size":43,"mtime":1683047707087,"results":"30","hashOfConfig":"27"},{"size":38,"mtime":1682714129007,"results":"31","hashOfConfig":"27"},{"size":38,"mtime":1683126774106,"results":"32","hashOfConfig":"27"},{"size":45,"mtime":1683126774105,"results":"33","hashOfConfig":"27"},{"size":42,"mtime":1682965654894,"results":"34","hashOfConfig":"27"},{"size":35,"mtime":1683126774106,"results":"35","hashOfConfig":"27"},{"size":42,"mtime":1683126774107,"results":"36","hashOfConfig":"27"},{"size":39,"mtime":1683317725050,"results":"37","hashOfConfig":"27"},{"size":3838,"mtime":1683508740413,"results":"38","hashOfConfig":"27"},{"size":3592,"mtime":1683508740411,"results":"39","hashOfConfig":"27"},{"size":4862,"mtime":1683517894975,"results":"40","hashOfConfig":"27"},{"size":4514,"mtime":1683518899140,"results":"41","hashOfConfig":"27"},{"size":9908,"mtime":1683517894975,"results":"42","hashOfConfig":"27"},{"size":994,"mtime":1683517894977,"results":"43","hashOfConfig":"27"},{"size":3474,"mtime":1683508740412,"results":"44","hashOfConfig":"27"},{"size":962,"mtime":1683517894976,"results":"45","hashOfConfig":"27"},{"size":6547,"mtime":1683517894978,"results":"46","hashOfConfig":"27"},{"size":499,"mtime":1683298556872,"results":"47","hashOfConfig":"27"},{"size":1493,"mtime":1683298970436,"results":"48","hashOfConfig":"27"},{"size":794,"mtime":1683328538893,"results":"49","hashOfConfig":"27"},{"size":3745,"mtime":1683517894977,"results":"50","hashOfConfig":"27"},{"size":40,"mtime":1683506072578,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"xu1qun",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\resteasyrecipe\\client\\src\\index.js",[],["111","112"],"D:\\resteasyrecipe\\client\\src\\App.js",["113","114","115","116"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\nimport Register from \"./pages/Register\";\nimport CreateRecipe from \"./pages/Create\";\n\nimport Recipes from \"./pages/Recipes\";\nimport Favorites from \"./pages/Favorites\";\nimport Random from \"./pages/Random\";\nimport MyRecipes from \"./pages/My Recipes\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport SearchBar from \"./pages/SearchBanner\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"auth_token\");\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [pageState, setPageState] = useState({\n    recipes: true,\n    random: false,\n    login: false,\n    create: false,\n    favorites: false,\n    search: true,\n    myRecipes: false,\n  });\n\n  return (\n    <>\n      <ApolloProvider client={client}>\n\n        <Home pageState={pageState} setPageState={setPageState} />\n        {pageState.search ? <SearchBar /> : \"\"}\n        {pageState.recipes ? <Recipes /> : \"\"}\n        {pageState.random ? <Random /> : \"\"}\n        {pageState.login ? <Login /> : \"\"}\n        {pageState.create ? <CreateRecipe /> : \"\"}\n        {pageState.favorites ? <Favorites /> : \"\"}\n        {pageState.myRecipes ? <MyRecipes /> : \"\"}\n      </ApolloProvider>\n\n      <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","D:\\resteasyrecipe\\client\\src\\pages\\Register\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Home\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Login\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Recipes\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Create\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Favorites\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Random\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\My Recipes\\index.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Register\\Register.js",["117"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [open, setOpen] = useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n   useEffect(() => {\n     if (error) {\n       setShowAlert(true);\n     } else {\n       setShowAlert(false);\n     }\n   }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      name: '',\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Register Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Something went wrong. Check your inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Name</InputLabel>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              value={formState.name}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Register User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Register;\n","D:\\resteasyrecipe\\client\\src\\pages\\Login\\Login.js",["118"],"import { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Register from \"../Register/Register\"\nimport Grid from '@mui/material/Grid';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\n\n\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login() {\n\n\n  const [open, setOpen] = useState(true);\n  \n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  \n  \n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n  \n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n\n  };\n  return (\n    <>\n      <Grid container justifyContent=\"center\">\n        <Grid container justifyContent=\"center\">\n          <h1>Login Here</h1>\n        </Grid>\n        <Grid item justifyContent=\"center\" xs={10} md={6} lg={4}>\n          <form noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Stack sx={{ width: \"100%\" }} spacing={2}>\n              <Snackbar\n                open={showAlert}\n                sx={{ height: \"100%\" }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <Alert\n                  dismissible\n                  severity=\"error\"\n                  onClose={() => setShowAlert(false)}\n                >\n                  Please check your login inputs!\n                </Alert>\n              </Snackbar>\n            </Stack>\n            <InputLabel>Email</InputLabel>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <InputLabel>Password</InputLabel>\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              fullWidth\n              onChange={handleInputChange}\n              required\n            />\n            <Stack\n              justifyContent=\"center\"\n              direction=\"row\"\n              spacing={2}\n              padding={2}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                type=\"submit\"\n                onClick={handleClick}\n              >\n                Login User\n              </Button>\n            </Stack>\n          </form>\n        </Grid>\n\n        <Register />\n      </Grid>\n    </>\n  );\n}\n\nexport default Login;\n","D:\\resteasyrecipe\\client\\src\\pages\\Favorites\\Favorites.js",["119"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport StarsRating from \"stars-rating\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\n\nfunction Favorites() {\n  const [expanded, setExpanded] = React.useState(false);\n  const [rating, setRating] = useState(0);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([\n\n      {\n        name: \"Chicken Tacos\",\n        ingredients: \"1/2 pound chicken, four bell peppers \",\n        instructions: \"Cook chicken and heat tortillas\",\n        region: \"Meixcan\",\n        cookTime: \"30 minutes\",\n        description: \"Tacos made with pollo for a zesty punch\",\n  \n        image: require(\"../../Images/chickenTacos.jpg\").default,\n      },\n      {\n        name: \"Apple Walnut Salad\",\n        ingredients:\n          \"Arugula, Belgian Endive, Apples, Dried Cranberries, Blue Cheese, Nuts, Maple Cinnamon Dressing  \",\n        instructions:\n          \"1. Toast and chop the walnuts. 2.Whisk the dressing ingredients together. Stir in the apples. 3. Place the arugula and endive in a bowl. 4. Add part of the cranberries, cheese, and walnuts. 5. Transfer the apples to the bowl with the greens. Toss to coat. Continue to add the dressing until the salad is moist. 6.Finish with the remaining toppings and toss. ENJOY!\",\n        region: \"American\",\n        cookTime: \"28 minutes\",\n        description: \"Crisp salad\",\n  \n        image: require(\"../../Images/appleWalnutSal.jpg\").default,\n      },\n    ]);\n\n\n  const ratingChange = (newRating) => {\n    setRating(newRating);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {favoriteRecipes.map((recipe) => (\n        <Card sx={{ maxWidth: 345 }} key={recipe.name}>\n          <Typography marginTop=\"30px\" variant=\"h3\" align=\"center\">\n            {\" \"}\n            Favorites\n          </Typography>\n          <CardHeader\n            avatar={\n              <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n\n              </Avatar>\n            }\n\n            title={recipe.name}\n          />\n          <CardMedia\n            component=\"img\"\n            height=\"194\"\n            image={recipe.image}\n\n          />\n          <CardContent>\n              <h2>Description: </h2>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              <p>{recipe.description}</p>\n              <StarsRating\n                count={5}\n                value={rating}\n                onChange={ratingChange}\n                size={24}\n                color2={\"#ffd700\"}\n              />\n            </Typography>\n          </CardContent>\n\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\">\n              <FavoriteIcon />\n            </IconButton>\n\n            <ExpandMore\n              expand={expanded}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          </CardActions>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography paragraph>\n                <h3>Directions: </h3>\n                {recipe.instructions}\n              </Typography>\n              <Typography paragraph>\n                <h3>Ingredients: </h3>\n                {recipe.ingredients}\n              </Typography>\n              <Typography paragraph>\n                <h3>Cook time: </h3>\n                {recipe.cookTime}\n              </Typography>\n              <Typography>\n                <h3>Region: </h3>\n                {recipe.region}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Favorites;\n","D:\\resteasyrecipe\\client\\src\\pages\\Create\\CreateRecipe.js",["120","121","122","123","124","125"],"D:\\resteasyrecipe\\client\\src\\pages\\Home\\Home.js",["126","127","128","129","130","131","132","133"],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuBookIcon from \"@mui/icons-material/MenuBook\";\nimport AllInclusiveTwoToneIcon from \"@mui/icons-material/AllInclusiveTwoTone\";\nimport FavoriteTwoToneIcon from \"@mui/icons-material/FavoriteTwoTone\";\nimport PermIdentityTwoToneIcon from \"@mui/icons-material/PermIdentityTwoTone\";\n// import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport FastfoodTwoToneIcon from \"@mui/icons-material/FastfoodTwoTone\";\nimport DriveFileRenameOutlineTwoToneIcon from \"@mui/icons-material/DriveFileRenameOutlineTwoTone\";\nimport LogoutTwoToneIcon from \"@mui/icons-material/LogoutTwoTone\";\nimport MenuBookTwoToneIcon from \"@mui/icons-material/MenuBookTwoTone\";\nimport Person2TwoToneIcon from \"@mui/icons-material/Person2TwoTone\";\nimport Auth from \"../../utils/auth.js\";\n\n\nfunction Home({ pageState, setPageState }) {\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n\n  const handleOpenRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: true,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n\n  const handleOpenRandom = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: true,\n      login: false,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n  };\n  const handleOpenLogin = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: true,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n  };\n  const handleOpenFavorites = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      favorites: true,\n      create: false,\n      search: true,\n      myRecipes: false,\n    });\n  };\n  const handleOpenCreateRecipe = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: true,\n      favorites: false,\n      search: false,\n      myRecipes: false,\n    });\n  };\n  const handleOpenMyRecipes = () => {\n    setPageState({\n      ...pageState,\n      recipes: false,\n      random: false,\n      login: false,\n      create: false,\n      favorites: false,\n      search: false,\n      myRecipes: true,\n    });\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" style={{ background: \"#b71c1c\" }}>\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <MenuBookIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n            <Typography\n              variant=\"h4\"\n              noWrap\n              component=\"a\"\n              href=\"/\"\n              sx={{\n                mr: 2,\n                display: { xs: \"none\", md: \"flex\" },\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n\n                <MenuItem onClick={handleOpenRecipes}>\n                  <FastfoodTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                  <Typography textAlign=\"center\">Recipes</Typography>\n                </MenuItem>\n                {Auth.loggedIn() ? (\n                  <>\n                    <MenuItem onClick={handleOpenRandom}>\n                      <AllInclusiveTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Random</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenCreateRecipe}>\n                      <DriveFileRenameOutlineTwoToneIcon\n                        sx={{ marginRight: \"10px\" }}\n                      />\n                      <Typography textAlign=\"center\">Create Recipe</Typography>\n                    </MenuItem>\n                    <MenuItem onClick={handleOpenMyRecipes}>\n                      <MenuBookTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                      <Typography textAlign=\"center\">My Recipes</Typography>\n                    </MenuItem>\n                    {/* <MenuItem onClick={handleOpenFavorites}>\n                      <FavoriteTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Favorites</Typography>\n                    </MenuItem> */}\n                    <MenuItem onClick={Auth.logout}>\n                      <LogoutTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                      <Typography textAlign=\"center\">Log Out</Typography>\n                    </MenuItem>\n                  </>\n                ) : (\n                  <MenuItem onClick={handleOpenLogin}>\n                    <PermIdentityTwoToneIcon sx={{ marginRight: \"10px\" }} />\n                    <Typography textAlign=\"center\">Login/Register</Typography>\n                  </MenuItem>\n                )}\n\n              </Menu>\n            </Box>\n            <MenuBookIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n            <Typography\n              variant=\"h5\"\n              noWrap\n              component=\"a\"\n              href=\"\"\n              sx={{\n                mr: 2,\n                display: { xs: \"flex\", md: \"none\" },\n                flexGrow: 1,\n                fontFamily: \"monospace\",\n                fontWeight: 700,\n                letterSpacing: \".3rem\",\n                color: \"inherit\",\n                textDecoration: \"none\",\n              }}\n            >\n              Rest Easy Recipes\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n\n\n              <Button\n                onClick={handleOpenRecipes}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                <FastfoodTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                Recipes\n              </Button>\n              {Auth.loggedIn() ? (\n                <>\n                  <Button\n                    onClick={handleOpenRandom}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <AllInclusiveTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Random\n                  </Button>\n                  <Button\n                    onClick={handleOpenCreateRecipe}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <DriveFileRenameOutlineTwoToneIcon\n                      sx={{ marginRight: \"5px\" }}\n                    />\n                    Create Recipe\n                  </Button>\n                  <Button\n                    onClick={handleOpenMyRecipes}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <MenuBookTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    My Recipes\n                  </Button>\n                  {/* <Button\n                    onClick={handleOpenFavorites}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <FavoriteTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Favorites\n                  </Button> */}\n\n                  <Button\n                    onClick={Auth.logout}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    <LogoutTwoToneIcon sx={{ marginRight: \"5px\" }} />\n                    Logout\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  onClick={handleOpenLogin}\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\n                >\n                  <Person2TwoToneIcon sx={{ marginRight: \"5px\" }} />\n                  Login/Register\n                </Button>\n              )}\n\n            </Box>\n\n          </Toolbar>\n        </Container>\n      </AppBar>\n\n    </>\n  );\n}\nexport default Home;\n","D:\\resteasyrecipe\\client\\src\\pages\\Recipes\\Recipes.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\Random\\Random.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\My Recipes\\MyRecipes.js",["134"],"import * as React from \"react\";\nimport RecipeCard from \"../RecipeCard\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\n\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\n\nfunction Recipes() {\n\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const user = data?.me || {};\n\n  console.log(user.name);\n\n  console.log(user.recipes);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <Typography marginTop=\"30px\" variant=\"h3\" align=\"center\">\n        {\" \"}\n        {user.name}'s Recipes\n      </Typography>\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {user.recipes.map((recipe) => (\n          <RecipeCard key={recipe._id} recipe={recipe} user={user} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Recipes;\n","D:\\resteasyrecipe\\client\\src\\pages\\SearchBanner\\SearchBanner.js",["135","136"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport StarsRating from \"stars-rating\";\n\nimport Grid from \"@mui/material/Grid\";\nimport HomePhoto from \"../../Images/foodBanner.png\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { QUERY_RECIPE_BY_REGION } from \"../../utils/queries\";\nimport RecipeCard from \"../RecipeCard\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nfunction SearchBar() {\n  const [expanded, setExpanded] = React.useState(false);\n  const [favorites, setFavorites] = useState([]);\n\n  const handleFavoriteClick = (recipeName) => {\n    if (favorites.includes(recipeName)) {\n      setFavorites(favorites.filter((name) => name !== recipeName));\n    } else {\n      setFavorites([...favorites, recipeName]);\n    }\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n\n  const [fetchRecipes, { data, error }] = useLazyQuery(QUERY_RECIPE_BY_REGION);\n\n  if (error) {\n    console.log(error);\n  }\n\n\n  return (\n    <>\n      <Grid\n        sx={{\n          backgroundImage: `url(${HomePhoto})`,\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          height: 500,\n          width: \"100%\",\n        }}\n      >\n        <Grid container justifyContent={\"center\"} padding={20}>\n          <TextField\n            sx={{ backgroundColor: \"whitesmoke\", width: 600 }}\n            id=\"search\"\n            type=\"search\"\n            value={searchTerm}\n            label=\"Search\"\n            onChange={handleChange}\n            margin=\"dense\"\n          />\n\n          <Grid padding={2}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                fetchRecipes({ variables: { recipeRegion: searchTerm } });\n              }}\n              style={{ background: \"#dd2c00\" }}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid>\n        <Grid>\n          {data && (\n            <Grid>\n              <Typography marginTop=\"30px\" variant=\"h3\" align=\"center\">\n                {\" \"}\n                Results\n              </Typography>\n              <Card\n                sx={{\n                  maxWidth: 345,\n                  marginRight: 10,\n                  marginLeft: 10,\n                  marginBottom: \"20px\",\n                  marginTop: \"50px\",\n                }}\n                key={data.recipe.name}\n              >\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      sx={{ bgcolor: red[500] }}\n                      aria-label=\"recipe\"\n                    ></Avatar>\n                  }\n                  title={data.recipe.name}\n                />\n                <CardMedia\n                  component=\"img\"\n                  className=\"card-image\"\n                  image={data.recipe.image}\n                  title={data.recipe.name}\n                />\n                <CardContent>\n                    <h2>Description: </h2>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    <p>{data.recipe.description}</p>\n\n                    <StarsRating\n                      count={5}\n                      value={data.recipe.rate}\n                      size={24}\n                      color2={\"#ffd700\"}\n                    />\n                  </Typography>\n                </CardContent>\n\n                <CardActions disableSpacing>\n                  <IconButton\n                    aria-label=\"add to favorites\"\n                    onClick={() => handleFavoriteClick(data.recipe.name)}\n                  >\n                    <FavoriteIcon\n                      color={\n                        favorites.includes(data.recipe.name)\n                          ? \"secondary\"\n                          : \"inherit\"\n                      }\n                    />\n                  </IconButton>\n\n                  <ExpandMore\n                    expand={expanded}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                  >\n                    <ExpandMoreIcon />\n                  </ExpandMore>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                  <CardContent>\n                    <Typography paragraph>\n                      <h3>Directions: </h3>\n                      {data.recipe.instructions}\n                    </Typography>\n                    <Typography paragraph>\n                      <h3>Ingredients: </h3>\n                      {data.recipe.ingredients}\n                    </Typography>\n                    <Typography paragraph>\n                      <h3>Cook time: </h3>\n                      {data.recipe.cookTime}\n                      <p> minutes</p>\n                    </Typography>\n                    <Typography>\n                      <h3>Region: </h3>\n                      {data.recipe.region}\n                    </Typography>\n                  </CardContent>\n                </Collapse>\n              </Card>\n            </Grid>\n          )}\n          {error && <Grid>There is no result</Grid>}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default SearchBar;\n","D:\\resteasyrecipe\\client\\src\\utils\\auth.js",["137"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload('/');\n  }\n}\n\nexport default new AuthService();\n","D:\\resteasyrecipe\\client\\src\\utils\\mutations.js",[],"D:\\resteasyrecipe\\client\\src\\utils\\queries.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\RecipeCard.js",[],"D:\\resteasyrecipe\\client\\src\\pages\\RecipeCard\\index.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":9,"column":27,"nodeType":"144","messageId":"145","endLine":9,"endColumn":33},{"ruleId":"142","severity":1,"message":"146","line":9,"column":35,"nodeType":"144","messageId":"145","endLine":9,"endColumn":40},{"ruleId":"142","severity":1,"message":"147","line":9,"column":42,"nodeType":"144","messageId":"145","endLine":9,"endColumn":48},{"ruleId":"142","severity":1,"message":"148","line":14,"column":8,"nodeType":"144","messageId":"145","endLine":14,"endColumn":16},{"ruleId":"142","severity":1,"message":"149","line":30,"column":29,"nodeType":"144","messageId":"145","endLine":30,"endColumn":33},{"ruleId":"142","severity":1,"message":"149","line":35,"column":26,"nodeType":"144","messageId":"145","endLine":35,"endColumn":30},{"ruleId":"142","severity":1,"message":"150","line":37,"column":27,"nodeType":"144","messageId":"145","endLine":37,"endColumn":45},{"ruleId":"142","severity":1,"message":"151","line":2,"column":20,"nodeType":"144","messageId":"145","endLine":2,"endColumn":29},{"ruleId":"142","severity":1,"message":"152","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":21},{"ruleId":"142","severity":1,"message":"153","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":16},{"ruleId":"142","severity":1,"message":"154","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":13},{"ruleId":"142","severity":1,"message":"155","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":13},{"ruleId":"142","severity":1,"message":"156","line":39,"column":9,"nodeType":"144","messageId":"145","endLine":39,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":14},{"ruleId":"142","severity":1,"message":"158","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":15},{"ruleId":"142","severity":1,"message":"159","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":27},{"ruleId":"142","severity":1,"message":"160","line":19,"column":10,"nodeType":"144","messageId":"145","endLine":19,"endColumn":18},{"ruleId":"142","severity":1,"message":"161","line":31,"column":10,"nodeType":"144","messageId":"145","endLine":31,"endColumn":22},{"ruleId":"142","severity":1,"message":"162","line":37,"column":9,"nodeType":"144","messageId":"145","endLine":37,"endColumn":27},{"ruleId":"142","severity":1,"message":"163","line":45,"column":9,"nodeType":"144","messageId":"145","endLine":45,"endColumn":28},{"ruleId":"142","severity":1,"message":"164","line":87,"column":9,"nodeType":"144","messageId":"145","endLine":87,"endColumn":28},{"ruleId":"142","severity":1,"message":"165","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":13},{"ruleId":"142","severity":1,"message":"166","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":18},{"ruleId":"142","severity":1,"message":"167","line":24,"column":8,"nodeType":"144","messageId":"145","endLine":24,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":28,"column":1,"nodeType":"170","endLine":28,"endColumn":34},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'Register' is defined but never used.","'data' is assigned a value but never used.","'setFavoriteRecipes' is assigned a value but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'Paper' is defined but never used.","'handleImageChange' is assigned a value but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'FavoriteTwoToneIcon' is defined but never used.","'useState' is defined but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","'handleOpenFavorites' is assigned a value but never used.","'red' is defined but never used.","'useQuery' is defined but never used.","'RecipeCard' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]